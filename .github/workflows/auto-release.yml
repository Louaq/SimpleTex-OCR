name: 构建与自动发布

on:
  push:
    branches:
      - main
      - master
      - dev
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest]
        # 未来可以添加: macos-latest, ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      
      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: 缓存依赖
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: 安装依赖
        run: npm ci
      
      - name: 构建应用
        run: npm run build
        env:
          CI: false
        
      - name: 获取版本号
        id: package_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        shell: bash
      
      - name: 标准构建包
        run: npm run package
        env:
          CI: false
      
      - name: 验证图标文件
        run: |
          Get-ChildItem -Path assets\icon.* | ForEach-Object { Write-Host "Found icon: $($_.FullName), Size: $($_.Length) bytes" }
        shell: pwsh
      
      - name: 尝试发布到GitHub
        id: publish
        continue-on-error: true
        run: npm run publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: false
      
      - name: 压缩应用文件
        if: matrix.os == 'windows-latest'
        run: |
          cd release
          if (Test-Path -Path "win-unpacked") {
            Compress-Archive -Path win-unpacked -DestinationPath SimpleTex-OCR-win.zip -Force
            Write-Host "win-unpacked目录已压缩成功"
          } else {
            Write-Host "警告: win-unpacked目录不存在"
            Get-ChildItem -Path . | ForEach-Object { Write-Host "发现文件: $($_.Name)" }
          }
        shell: pwsh
      
      - name: 创建 Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.package_version.outputs.version }}
          name: Release v${{ steps.package_version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            ./release/SimpleTex-OCR-win.zip
            ./release/LaTeX*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            release/SimpleTex-OCR-win.zip
            release/LaTeX*.exe
